{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/pages/Gokomyo.svelte",
    "../src/pages/Gomizunoo.svelte",
    "../src/components/nav.svelte",
    "../src/components/showdata.svelte",
    "../src/components/extradata.svelte",
    "../src/pages/Gomomozono.svelte",
    "../src/pages/Gosakuramachi.svelte",
    "../src/pages/Gosai.svelte",
    "../src/pages/Meisho.svelte",
    "../src/pages/Reigen.svelte",
    "../src/pages/Higashiyama.svelte",
    "../src/pages/Nakamikado.svelte",
    "../src/pages/Sakuramachi.svelte",
    "../src/pages/Momozono.svelte",
    "../src/pages/Kokaku.svelte",
    "../src/pages/Ninko.svelte",
    "../src/pages/Komei.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { Router, Route } from \"svelte-routing\";\n\timport * as Collection from \"./main.js\";\n\texport let url = \"\";\n</script>\n\n<style>\n\t:global(body) {\n\t\tbackground-image: url(\"images/Japanese_Pattern_34.jpg\");\n\t\tbackground-repeat: repeat;\n\t\tbackground-size: contain;\n\t\tfont-family: fantasy;\n\t\tposition: relative!important;\n\t}\n\n\t:global(h1) {\n\t\tfont-weight: bold;\n\t\tfont-size: 1.3em;\n\t\tcolor: black;\n\t\tfont-family: fantasy;\n\t\ttext-align: center;\n\t\tpadding: 0;\n\t\tmargin: 0 0 0 17em;\n\t}\n\n\t:global(a:hover) {\n\t\ttext-decoration: none;\n\t}\n\n\t:global(a) {\n\t\tcolor: black!important;\n\t}\n\n</style>\n\n\n<Router url=\"{url}\">\n  <div>\n\t<Route path=\"/\" component=\"{Collection.Home}\" />\n    <Route path=\"Gokomyo\" component=\"{Collection.Gokomyo}\" />\n    <Route path=\"Gomizunoo\" component=\"{Collection.Gomizunoo}\" />\n\t<Route path=\"Gomomozono\" component=\"{Collection.Gomomozono}\" />\n    <Route path=\"Gosai\" component=\"{Collection.Gosai}\" />\n    <Route path=\"Gosakuramachi\" component=\"{Collection.Gosakuramachi}\" />\n    <Route path=\"Higashiyama\" component=\"{Collection.Higashiyama}\" />\n\t<Route path=\"Nakamikado\" component=\"{Collection.Nakamikado}\" />\n    <Route path=\"Kokaku\" component=\"{Collection.Kokaku}\" />\n\t<Route path=\"Komei\" component=\"{Collection.Komei}\" />\n    <Route path=\"Meisho\" component=\"{Collection.Meisho}\" />\n    <Route path=\"Momozono\" component=\"{Collection.Momozono}\" />\n\t<Route path=\"Ninko\" component=\"{Collection.Ninko}\" />\n    <Route path=\"Reigen\" component=\"{Collection.Reigen}\" />\n    <Route path=\"Sakuramachi\" component=\"{Collection.Sakuramachi}\" />\n  </div>\n</Router>\n\n<!-- <Getdata let:data>\n\t{#each data as result}\n\t\t<div>\n\t\t\t<h3>Titel: {result.title.value}</h3>\n\t\t\t<p>Foto: <img src=\"{result.img.value}\" alt=\"foto\"></p>\n\t\t\t<p>Type: {result.type.value}</p>\n\t\t\t<p>Cultuur: {result.herkomstLabel.value}</p>\n\t\t\t<p>Jaartal: {result.jaartal.value}</p>\n\t\t</div>\n\t{/each}\n</Getdata> -->\n",
    "<script>\n    import {onMount} from 'svelte';\n    import results from '../../data/getdata.js';\n    import Showdata from '../components/showdata.svelte';\n    import Extradata from '../components/extradata.svelte';\n    \n    let data = [];\n    let filteredData = [];\n\n    onMount( async () => {\n        // wacht totdat de data is ingeladen en zet het dan in de lege array gemaand data\n        data = await results();\n\n        // console.log(data.map(el => el.uniqueJaartal.value === \"1619\").filter(e => e)) \n\n        /**\n         * Geeft een array terug met de te matchen jaren\n         * \n         * @return {Array}\n         */\n        const getDates = (dates) => {\n            // Check of de/het jaartal(len) die je wilt checken een streepje heeft.\n            // Wanneer het een streepje heeft, is het een periode in plaats van een\n            // specifiek jaartal\n            if (/^(\\d+(|\\s))-((|\\s)\\d+)$/.test(dates)) {\n\n                // split de twee jaartallen op het streepje, en cast beide jaartallen\n                // naar een integer, zodat deze later vergeleken kunnen worden met de jaar- \n                // tallen van de resultaten\n                // Array.map() loopt over alle waarden in de array heen en muteert de waarde (e)\n                // op die plek in de array. Bij deze loop worden whitespaces weggehaald en\n                // van strings dus integers gemaakt\n                // [\"100 \", \"200\"] wordt dan [100, 200]\n                return dates.split('-').map(e => parseInt(e.trim()));\n            } else if (!isNaN(dates)) {\n                // Wanneer er geen streepje in het jaartal, moet deze in ieder geval een \n                // valide getal zijn. isNan() checkt daar op (is Not A Number)\n                // en als het een getal is, cast hij hem naar een getal\n                return [parseInt(dates.trim())];\n            }\n\n            // geen jaartal, met of zonder streepje. Someone fucked it up\n            return [];\n        }\n\n        // jaartallen die je wilt checken\n        const yearToCheck = getDates(\"1646\");\n\n        filteredData = data.filter(el => {\n            // zet jaartallen van het artikel in een array, zoals boven beschreven\n            const dates = getDates(el.uniqueJaartal.value);\n            // Wanneer er geen streepje is\n            if (dates.length === 1) {\n                // kijk of de te checken jaartal een streepje heeft\n                return yearToCheck.length === 1 ? \n                    // geen streepje, dan gewoon 1-op-1 checken\n                    yearToCheck[0] === dates[0] :\n                    // wel een streepje? Dan moet het begin van de te checken periode minder zijn dan \n                    // het jaartal van het artikel, en het einde van de te checken periode meer.\n                    // Dus -> \"1828 - 1856\" filteren -> 1828 is minder dan bijv. 1855 en 1856 is meer, dus 1855 \n                    // wordt meegenomen in de filtering\n                    yearToCheck[0] <= dates[0] && yearToCheck[1] >= dates[0];\n            } else if (dates.length === 2) {\n                // Check van een periode, aangezien er een streepje zit in het jaartal van het artikel\n                return yearToCheck.length === 1 ? \n                    // er wordt gecheckt op 1 jaartal, dan moet deze binnen de periode liggen van het artikel\n                    // dus meer dan de begin van die periode, en minder dan het einde van die periode \n                    yearToCheck[0] >= dates[0] && yearToCheck[0] <= dates[1] :\n                    // Er zit ee nstreepje in beide jaartallen, dan moeten de jaartallen van de te checken periode\n                    // binnen de jaartallen van de periode van het artikelliggen.\n                    yearToCheck[0] >= dates[0] && yearToCheck[1] <= dates[1];\n            }\n            // wanneer dates.length >= 3 of 0 is, is dit geen valide datum of periode, waardoor \n            // dit artikel sowieso niet meegenomen wordt in de filtering. \n            return false;\n        });\n\n        console.log(filteredData);\n        console.log(\"test2\", filteredData);\n    })\n\n</script>\n\n<style>\n\n\t.container {\n\t\tmax-width: 1100px;\n\t\tmargin: 0 auto;\n\t}\n\n\t.cards {\n\t\tdisplay: flex;\n\t\t-webkit-justify-content: center;\n\t\tjustify-content: center;\n\t\t-webkit-flex-wrap: wrap;\n\t\tflex-wrap: wrap;\n\t\tmargin-top: 15px;\n\t\tpadding: 1.5%;\n\t\t-webkit-box-sizing: border-box;\n\t\t-moz-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t}\n</style>\n\n<Extradata \n    title=\"Emperor Go-Kōmyō\"\n    years=\"1643–1654\"\n    name=\"Tsuguhito\"\n    image=\"images/Emperor_Go-Kōmyō.jpg\"\n    description=\"    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \n    \n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"/>\n\n<div class=\"container\">\n    <div class=\"cards\">\n        {#each filteredData as Showdata}\n                <Showdata {Showdata}/>\n            {:else}\n\n            Loading...\n        {/each}\n    </div>\n</div>",
    "<script>\n    import {onMount} from 'svelte';\n    import results from '../../data/getdata.js';\n    import Showdata from '../components/showdata.svelte';\n    import Extradata from '../components/extradata.svelte';\n\n    let data = [];\n    let filteredData = [];\n\n    onMount( async () => {\n\n        data = await results();\n\n        // console.log(data.map(el => el.uniqueJaartal.value === \"1619\").filter(e => e)) \n\n        /**\n         * Geeft een array terug met de te matchen jaren\n         * \n         * @return {Array}\n         */\n        const getDates = (dates) => {\n            // Check of de/het jaartal(len) die je wilt checken een streepje heeft.\n            // Wanneer het een streepje heeft, is het een periode in plaats van een\n            // specifiek jaartal\n            if (/^(\\d+(|\\s))-((|\\s)\\d+)$/.test(dates)) {\n\n                // split de twee jaartallen op het streepje, en cast beide jaartallen\n                // naar een integer, zodat deze later vergeleken kunnen worden met de jaar- \n                // tallen van de resultaten\n                // Array.map() loopt over alle waarden in de array heen en muteert de waarde (e)\n                // op die plek in de array. Bij deze loop worden whitespaces weggehaald en\n                // van strings dus integers gemaakt\n                // [\"100 \", \"200\"] wordt dan [100, 200]\n                return dates.split('-').map(e => parseInt(e.trim()));\n            } else if (!isNaN(dates)) {\n                // Wanneer er geen streepje in het jaartal, moet deze in ieder geval een \n                // valide getal zijn. isNan() checkt daar op (is Not A Number)\n                // en als het een getal is, cast hij hem naar een getal\n                return [parseInt(dates.trim())];\n            }\n\n            // geen jaartal, met of zonder streepje. Someone fucked it up\n            return [];\n        }\n\n        // jaartallen die je wilt checken\n        const yearToCheck = getDates(\"1600 - 1624\");\n\n        filteredData = data.filter(el => {\n            // zet jaartallen van het artikel in een array, zoals boven beschreven\n            const dates = getDates(el.uniqueJaartal.value);\n            // Wanneer er geen streepje is\n            if (dates.length === 1) {\n                // kijk of de te checken jaartal een streepje heeft\n                return yearToCheck.length === 1 ? \n                    // geen streepje, dan gewoon 1-op-1 checken\n                    yearToCheck[0] === dates[0] :\n                    // wel een streepje? Dan moet het begin van de te checken periode minder zijn dan \n                    // het jaartal van het artikel, en het einde van de te checken periode meer.\n                    // Dus -> \"1828 - 1856\" filteren -> 1828 is minder dan bijv. 1855 en 1856 is meer, dus 1855 \n                    // wordt meegenomen in de filtering\n                    yearToCheck[0] <= dates[0] && yearToCheck[1] >= dates[0];\n            } else if (dates.length === 2) {\n                // Check van een periode, aangezien er een streepje zit in het jaartal van het artikel\n                return yearToCheck.length === 1 ? \n                    // er wordt gecheckt op 1 jaartal, dan moet deze binnen de periode liggen van het artikel\n                    // dus meer dan de begin van die periode, en minder dan het einde van die periode \n                    yearToCheck[0] >= dates[0] && yearToCheck[0] <= dates[1] :\n                    // Er zit ee nstreepje in beide jaartallen, dan moeten de jaartallen van de te checken periode\n                    // binnen de jaartallen van de periode van het artikelliggen.\n                    yearToCheck[0] >= dates[0] && yearToCheck[1] <= dates[1];\n            }\n            // wanneer dates.length >= 3 of 0 is, is dit geen valide datum of periode, waardoor \n            // dit artikel sowieso niet meegenomen wordt in de filtering. \n            return false;\n        });\n\n        console.log(filteredData);\n        console.log(\"test2\", filteredData);\n    })\n\n</script>\n\n<style>\n\n\t.container {\n\t\tmax-width: 1100px;\n\t\tmargin: 0 auto;\n\t}\n\n\t.cards {\n\t\tdisplay: flex;\n\t\t-webkit-justify-content: center;\n\t\tjustify-content: center;\n\t\t-webkit-flex-wrap: wrap;\n\t\tflex-wrap: wrap;\n\t\tmargin-top: 15px;\n\t\tpadding: 1.5%;\n\t\t-webkit-box-sizing: border-box;\n\t\t-moz-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t}\n</style>\n\n<Extradata \n    title=\"Emperor Go-Mizunoo\"\n    years=\"1611–1629\"\n    name=\"Kotohito\"\n    image=\"images/Emperor_Go-Mizunoo.jpg\"\n    description=\"    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \n    \n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"/>\n\n<div class=\"container\">\n    <div class=\"cards\">\n        {#each filteredData as Showdata}\n                <Showdata {Showdata}/>\n            {:else}\n\n            Loading...\n        {/each}\n    </div>\n</div>",
    "<script>\nimport { Router, Link } from \"svelte-routing\";\nexport let url = \"\";\n</script>\n\n<style>\n\n/* Blocks with 6 by 5 cm: */\n\n.gomizunoo {\n\ttransition: transform 0.3s;\n\tposition: absolute;\n\ttop: 465px;\n\tleft: 0;\n\tborder: 4px ridge #383326;\n\tbackground-color: black;\n\tcolor: white;\n\twidth: 9.8125em;\n\theight: 11.5em;\n}\n\n.reigen {\n\ttransition: transform 0.3s;\n\tposition: absolute;\n\ttop: 150px;\n\tleft: 450px;\n\tborder: 4px ridge #383326;\n\tbackground-color: black;\n\tcolor: white;\n\twidth: 9.8125em;\n\theight: 11.5em;\n}\n\n.sakuramachi {\n\ttransition: transform 0.3s;\n\tposition: absolute;\n\ttop: 460px;\n\tleft: 820px;\n\tborder: 4px ridge #383326;\n\tbackground-color: black;\n\tcolor: white;\n\twidth: 9.8125em;\n\theight: 11.5em;\n}\n\n.gosakuramachi {\n\ttransition: transform 0.3;\n\tposition: absolute;\n\ttop: 400px;\n\tleft: 1100px;\n\tborder: 4px ridge #383326;\n\tbackground-color: black;\n\tcolor: white;\n\twidth: 9.8125em;\n\theight: 11.5em;\n}\n\n.komei {\n\ttransition: transform 0.3s;\n\tposition: absolute;\n\ttop: 450px;\n\tleft: 1550px;\n\tborder: 4px ridge #383326;\n\tbackground-color: black;\n\tcolor: white;\n\twidth: 9.8125em;\n\theight: 11.5em;\n}\n\n/* Blocks with 7 by 8 cm: */\n\n.meisho {\n\ttransition: transform 0.3s;\n\tposition: absolute;\n\ttop: 150px;\n\tleft: 10px;\n\tborder: 4px ridge #383326;\n\tbackground-color: black;\n\tcolor: white;\n\twidth: 14em;\n\theight: 15em;\n}\n\n.gosai {\n\ttransition: transform 0.3s;\n\tposition: absolute;\n\ttop: 410px;\n\tleft: 400px;\n\tborder: 4px ridge #383326;\n\tbackground-color: black;\n\tcolor: white;\n\twidth: 14em;\n\theight: 15em;\n}\n\n.nakamikado {\n\ttransition: transform 0.3s;\n\tposition: absolute;\n\ttop: 133px;\n\tleft: 700px;\n\tborder: 4px ridge #383326;\n\tbackground-color: black;\n\tcolor: white;\n\twidth: 14em;\n\theight: 15em;\n}\n\n.gomomozono {\n\ttransition: transform 0.3s;\n\tposition: absolute;\n\ttop: 130px;\n\tleft: 1150px;\n\tborder: 4px ridge #383326;\n\tbackground-color: black;\n\tcolor: white;\n\twidth: 14em;\n\theight: 15em;\n}\n\n/* Blocks with 6 by 9 cm: */\n\n.gokomyo {\n\ttransition: transform 0.3s;\n\tposition: absolute;\n\ttop: 280px;\n\tleft: 200px;\n\tborder: 4px ridge #383326;\n\tbackground-color: black;\n\tcolor: white;\n\twidth: 19.25em;\n\theight: 12.1875em;\n}\n\n.higashiyama {\n\ttransition: transform 0.3s;\n\tposition: absolute;\n\ttop: 390px;\n\tleft: 580px;\n\tborder: 4px ridge #383326;\n\tbackground-color: black;\n\tcolor: white;\n\twidth: 19.25em;\n\theight: 12.1875em;\n}\n\n.momozono {\n\ttransition: transform 0.3s;\n\tposition: absolute;\n\ttop: 230px;\n\tleft: 860px;\n\tborder: 4px ridge #383326;\n\tbackground-color: black;\n\tcolor: white;\n\twidth: 19.25em;\n\theight: 12.1875em;\n}\n\n.kokaku {\n\ttransition: transform 0.3s;\n\tposition: absolute;\n\ttop: 300px;\n\tleft: 1280px;\n\tborder: 4px ridge #383326;\n\tbackground-color: black;\n\tcolor: white;\n\twidth: 19.25em;\n\theight: 12.1875em;\n}\n\n.ninko {\n\ttransition: transform 0.3s;\n\tposition: absolute;\n\ttop: 150px;\n\tleft: 1500px;\n\tborder: 4px ridge #383326;\n\tbackground-color: black;\n\tcolor: white;\n\twidth: 19.25em;\n\theight: 12.1875em;\n}\n\n.animate:hover {\n\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.2);\n\ttransform: scale(1.1);\n\tz-index: 1;\n}\n\n.title {\n\tposition: absolute;\n\tmargin: 0.3em 0 0 0.6em;\n\tfont-size: 0.8em;\n\tfont-family: fantasy;\n}\n\nimg {\n\tobject-fit: cover;\n\tdisplay: block;\n\twidth: 100%;\n\theight: 100%;\n}\n\n.bottom {\n\tobject-position: bottom;\n}\n\n.top {\n\tobject-position: top;\n}\n\n</style>\n<div class=\"wrapper\"></div>\n<Router url=\"{url}\">\n  <nav> \n    <div class=\"animate gomizunoo\">\n        <Link to=\"Gomizunoo\">\n            <p class=\"title\">1611–1629 Go-Mizunoo</p>\n            <img class=\"bottom\" src=\"images/Emperor_Go-Mizunoo.jpg\" alt=\"Go-Mizunoo\" />\n        </Link>\n    </div>\n    <div class=\"animate meisho\">\n        <Link to=\"Meisho\">\n            <p class=\"title\">1629–1643 Meishō</p>\n            <img class=\"\" src=\"images/Meisho_of_Japan.jpg\" alt=\"Meishō\" />\n        </Link>\n    </div>\n    <div class=\"animate gokomyo\">\n        <Link to=\"Gokomyo\">\n            <p class=\"title\">1643–1654 Go-Kōmyō</p>\n            <img class=\"top\" src=\"images/Emperor_Go-Kōmyō.jpg\" alt=\"Go-Kōmyō\" />\n        </Link>\n    </div>\n    <div class=\"animate gosai\">\n        <Link to=\"Gosai\">\n            <p class=\"title\">1655–1663 Go-Sai</p>\n            <img class=\"\" src=\"images/Emperor_Go-Sai.jpg\" alt=\"Go-Sai\" />\n        </Link>\n    </div>\n    <div class=\"animate reigen\">\n        <Link to=\"Reigen\">\n            <p class=\"title\">1663–1687 Reigen</p>\n            <img class=\"\" src=\"images/Emperor_Reigen.jpg\" alt=\"Reigen\" />\n        </Link>\n    </div>\n    <div class=\"animate higashiyama\">\n        <Link to=\"Higashiyama\">\n            <p class=\"title\">1687–1709 Higashiyama</p>\n            <img class=\"top\" src=\"images/800px-Emperor_Higashiyama.jpg\" alt=\"Higashiyama\" />\n        </Link>\n    </div>\n    <div class=\"animate nakamikado\">\n        <Link to=\"Nakamikado\">\n            <p class=\"title\">1709–1735 Nakamikado</p>\n            <img class=\"top\" src=\"images/Emperor_Nakamikado.jpg\" alt=\"Nakamikado\" />\n        </Link>\n    </div>\n    <div class=\"animate sakuramachi\">\n        <Link to=\"Sakuramachi\">\n            <p class=\"title\">1735–1747 Sakuramachi</p>\n            <img class=\"\" src=\"images/Emperor_Sakuramachi.jpg\" alt=\"Sakuramachi\" />\n        </Link>\n    </div>\n    <div class=\"animate momozono\">\n        <Link to=\"Momozono\">\n            <p class=\"title\">1747–1762 Momozono</p>\n            <img class=\"top\" src=\"images/1280px-Emperor_Momozono.jpg\" alt=\"Momozono\" />\n        </Link>\n    </div>\n    <div class=\"animate gosakuramachi\">\n        <Link to=\"Gosakuramachi\">\n            <p class=\"title\">1762–1771 Go-Sakuramachi</p>\n            <img class=\"top\" src=\"images/Empress_Go-Sakuramachi.jpg\" alt=\"Go-Sakuramachi\" />\n        </Link>\n    </div>\n    <div class=\"animate gomomozono\">\n        <Link to=\"Gomomozono\">\n            <p class=\"title\">1771–1779 Go-Momozono</p>\n            <img class=\"\" src=\"images/1024px-Emperor_Go-Momozono.jpg\" alt=\"Go-Momozono\" />\n        </Link>\n    </div>\n    <div class=\"animate kokaku\">\n        <Link to=\"Kokaku\">\n            <p class=\"title\">1780–1817 Kōkaku</p>\n            <img class=\"top\" src=\"images/Emperor_Kōkaku.jpg\" alt=\"Kōkaku\" />\n        </Link>\n    </div>\n    <div class=\"animate ninko\">\n        <Link to=\"Ninko\">\n            <p class=\"title\">1817–1846 Ninkō</p>\n            <img class=\"top\" src=\"images/Emperor_Ninkō.jpg\" alt=\"Ninkō\" />\n        </Link>\n    </div>\n    <div class=\"animate komei\">\n        <Link to=\"Komei\">\n            <p class=\"title\" style=\"color: white;\">1846–1867 Kōmei</p>\n            <img class=\"\" src=\"images/800px-The_Emperor_Komei.jpg\" alt=\"Kōmei\" />\n        </Link>\n    </div>\n  </nav>\n</Router>",
    "<script>\n\texport let Showdata;\n</script>\n\n<style>\n\n.card {\n\tposition: relative;\n\tmargin-bottom: 20px;\n\tpadding-bottom: 30px;\n\tbackground: #fefff9;\n\tcolor: #363636;\n\ttext-decoration: none;\n\t-moz-box-shadow: rgba(0, 0, 0, 0.19) 0 0 8px 0;\n\t-webkit-box-shadow: rgba(0, 0, 0, 0.19) 0 0 8px 0;\n\tbox-shadow: rgba(0, 0, 0, 0.19) 0 0 8px 0;\n\t-moz-border-radius: 4px;\n\t-webkit-border-radius: 4px;\n\tborder-radius: 4px;\n}\n\n.card span {\n\tdisplay: block;\n}\n\n.card .card-summary {\n\tpadding: 5% 5% 3% 5%;\n}\n\n.card .card-header {\n\tposition: relative;\n\theight: 220px;\n\toverflow: hidden;\n\tbackground-repeat: no-repeat;\n\tbackground-size: cover;\n\tbackground-position: center;\n\tbackground-color: rgba(255, 255, 255, 0.15);\n\tbackground-blend-mode: overlay;\n\t-moz-border-radius: 4px 4px 0 0;\n\t-webkit-border-radius: 4px;\n\tborder-radius: 4px 4px 0 0;\n}\n\n.card .card-header:hover,\n.card .card-header:focus {\n\tbackground-color: rgba(255, 255, 255, 0);\n}\n\n.card .card-title {\n\tbackground: rgba(220, 197, 119, 0.85);\n\tpadding: 3.5% 0 2.5% 0;\n\tcolor: white;\n\tfont-family: fantasy;\n\ttext-transform: uppercase;\n\tposition: absolute;\n\tbottom: 0;\n\twidth: 100%;\n}\n\n.card .card-title h3 {\n\tfont-size: 0.8em;\n\tline-height: 1.2;\n\tpadding: 0 3.5%;\n\tmargin: 0;\n}\n\n.card .card-meta {\n\tmax-height: 0;\n\toverflow: hidden;\n\tcolor: #666;\n\tfont-size: 0.78em;\n\ttext-transform: uppercase;\n\tposition: absolute;\n\tbottom: 5%;\n\tpadding: 0 5%;\n\t-moz-transition-property: max-height;\n\t-o-transition-property: max-height;\n\t-webkit-transition-property: max-height;\n\ttransition-property: max-height;\n\t-moz-transition-duration: 0.4s;\n\t-o-transition-duration: 0.4s;\n\t-webkit-transition-duration: 0.4s;\n\ttransition-duration: 0.4s;\n\t-moz-transition-timing-function: ease-in-out;\n\t-o-transition-timing-function: ease-in-out;\n\t-webkit-transition-timing-function: ease-in-out;\n\ttransition-timing-function: ease-in-out;\n}\n\n.card:hover,\n.card:focus {\n\tbackground: white;\n\t-moz-box-shadow: rgba(0, 0, 0, 0.45) 0 0 20px 0;\n\t-webkit-box-shadow: rgba(0, 0, 0, 0.45) 0 0 20px 0;\n\tbox-shadow: rgba(0, 0, 0, 0.45) 0 0 20px 0;\n}\n\n.card:hover .card-title,\n.card:focus .card-title {\n\tbackground: rgba(220, 197, 119, 0.95);\n}\n\n.card:hover .card-meta,\n.card:focus .card-meta {\n\tmax-height: 1.5em;\n}\n\n@media (max-width: 700px) {\n\t.card {\n\t\twidth: 100%;\n\t}\n}\n\n@media (min-width: 700px) {\n\t.card {\n\t\tmax-width: 320px;\n\t\tmargin-right: 20px;\n\t\tmargin-bottom: 20px;\n\t}\n\n\t.card:nth-child(even) {\n\t\tmargin-right: 0;\n\t}\n}\n\n@media (min-width: 980px) {\n\t.card:nth-child(even) {\n\t\tmargin-right: 20px;\n\t}\n\n\t.card:nth-child(3n) {\n\t\tmargin-right: 0;\n\t}\n}\n\n</style>\n\n<a class=\"card\" href=\"/\">\n  <span class=\"card-header\" style=\"background-image: url({Showdata.uniqueImage.value});\">\n  <span class=\"card-title\">\n    <h3>{Showdata.uniqueTitle.value}</h3>\n  </span>\n  </span>\n  <span class=\"card-summary\">\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna.\n  </span>\n  <span class=\"card-meta\">\n    Founded at: {Showdata.uniqueJaartal.value}\n  </span>\n</a>",
    "<script>\n\nexport let title;\nexport let name;\nexport let years;\nexport let description;\nexport let image;\n\n</script>\n\n<style>\n.wrapper {\n\tpadding: 1em;\n\tbackground-color: rgba(255, 255, 255, 0.6);\n\twidth: 60%;\n\tmargin: 0 auto;\n}\n\n.innerwrapper {\n\tdisplay: flex;\n\tjustify-content: space-between;\n}\n\nh1 {\n\tmargin: 0;\n}\n\n.wrapper > p:first-of-type {\n\tmargin-top: -0.5em;\n}\n\nimg {\n\tfloat: left;\n\twidth: 15em;\n\theight: 15em;\n\tmargin: 0 1em 1em 0;\n}\n\np {\n\twhite-space: pre;\n}\n\n</style>\n\n<div class=\"wrapper\">\n    <div class=\"innerwrapper\" >\n        <h1>{title}</h1>\n        <h1>{years}</h1>\n    </div>\n    <p>{name}</p>\n    <img src=\"{image}\" alt=\"{title}\" />\n    <p>{description}</p>\n</div>",
    "<script>\n    import {onMount} from 'svelte';\n    import results from '../../data/getdata.js';\n    import Showdata from '../components/showdata.svelte';\n    import Extradata from '../components/extradata.svelte';\n\n    let data = [];\n    let filteredData = [];\n\n    onMount( async () => {\n        // Wacht totdat hij de data binnen heeft gekregen en stopt dit in de lege data array\n        data = await results();\n\n        // console.log(data.map(el => el.uniqueJaartal.value === \"1619\").filter(e => e)) \n\n        /**\n         * Geeft een array terug met de te matchen jaren\n         * \n         * @return {Array}\n         */\n        const getDates = (dates) => {\n            // Check of de/het jaartal(len) die je wilt checken een streepje heeft.\n            // Wanneer het een streepje heeft, is het een periode in plaats van een\n            // specifiek jaartal\n            if (/^(\\d+(|\\s))-((|\\s)\\d+)$/.test(dates)) {\n\n                // split de twee jaartallen op het streepje, en cast beide jaartallen\n                // naar een integer, zodat deze later vergeleken kunnen worden met de jaar- \n                // tallen van de resultaten\n                // Array.map() loopt over alle waarden in de array heen en muteert de waarde (e)\n                // op die plek in de array. Bij deze loop worden whitespaces weggehaald en\n                // van strings dus integers gemaakt\n                // [\"100 \", \"200\"] wordt dan [100, 200]\n                return dates.split('-').map(e => parseInt(e.trim()));\n            } else if (!isNaN(dates)) {\n                // Wanneer er geen streepje in het jaartal, moet deze in ieder geval een \n                // valide getal zijn. isNan() checkt daar op (is Not A Number)\n                // en als het een getal is, cast hij hem naar een getal\n                return [parseInt(dates.trim())];\n            }\n\n            // geen jaartal, met of zonder streepje. Someone fucked it up\n            return [];\n        }\n\n        // jaartallen die je wilt checken\n        const yearToCheck = getDates(\"1771 - 1779\");\n\n        filteredData = data.filter(el => {\n            // zet jaartallen van het artikel in een array, zoals boven beschreven\n            const dates = getDates(el.uniqueJaartal.value);\n            // Wanneer er geen streepje is\n            if (dates.length === 1) {\n                // kijk of de te checken jaartal een streepje heeft\n                return yearToCheck.length === 1 ? \n                    // geen streepje, dan gewoon 1-op-1 checken\n                    yearToCheck[0] === dates[0] :\n                    // wel een streepje? Dan moet het begin van de te checken periode minder zijn dan \n                    // het jaartal van het artikel, en het einde van de te checken periode meer.\n                    // Dus -> \"1828 - 1856\" filteren -> 1828 is minder dan bijv. 1855 en 1856 is meer, dus 1855 \n                    // wordt meegenomen in de filtering\n                    yearToCheck[0] <= dates[0] && yearToCheck[1] >= dates[0];\n            } else if (dates.length === 2) {\n                // Check van een periode, aangezien er een streepje zit in het jaartal van het artikel\n                return yearToCheck.length === 1 ? \n                    // er wordt gecheckt op 1 jaartal, dan moet deze binnen de periode liggen van het artikel\n                    // dus meer dan de begin van die periode, en minder dan het einde van die periode \n                    yearToCheck[0] >= dates[0] && yearToCheck[0] <= dates[1] :\n                    // Er zit ee nstreepje in beide jaartallen, dan moeten de jaartallen van de te checken periode\n                    // binnen de jaartallen van de periode van het artikelliggen.\n                    yearToCheck[0] >= dates[0] && yearToCheck[1] <= dates[1];\n            }\n            // wanneer dates.length >= 3 of 0 is, is dit geen valide datum of periode, waardoor \n            // dit artikel sowieso niet meegenomen wordt in de filtering. \n            return false;\n        });\n\n        console.log(filteredData);\n        console.log(\"test2\", filteredData);\n    })\n\n</script>\n\n<style>\n\n\t.container {\n\t\tmax-width: 1100px;\n\t\tmargin: 0 auto;\n\t}\n\n\t.cards {\n\t\tdisplay: flex;\n\t\t-webkit-justify-content: center;\n\t\tjustify-content: center;\n\t\t-webkit-flex-wrap: wrap;\n\t\tflex-wrap: wrap;\n\t\tmargin-top: 15px;\n\t\tpadding: 1.5%;\n\t\t-webkit-box-sizing: border-box;\n\t\t-moz-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t}\n</style>\n\n<Extradata \n    title=\"Emperor Go-Momozono\"\n    years=\"1771–1779\"\n    name=\"Hidehito\"\n    image=\"images/1024px-Emperor_Go-Momozono.jpg\"\n    description=\"    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \n    \n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"/>\n\n<div class=\"container\">\n    <div class=\"cards\">\n        {#each filteredData as Showdata}\n                <Showdata {Showdata}/>\n            {:else}\n\n            Loading...\n        {/each}\n    </div>\n</div>",
    "<script>\n    import {onMount} from 'svelte';\n    import results from '../../data/getdata.js';\n    import Showdata from '../components/showdata.svelte';\n    import Extradata from '../components/extradata.svelte';\n\n    let data = [];\n    let filteredData = [];\n\n    onMount( async () => {\n\n        data = await results();\n\n        // console.log(data.map(el => el.uniqueJaartal.value === \"1619\").filter(e => e)) \n\n        /**\n         * Geeft een array terug met de te matchen jaren\n         * \n         * @return {Array}\n         */\n        const getDates = (dates) => {\n            // Check of de/het jaartal(len) die je wilt checken een streepje heeft.\n            // Wanneer het een streepje heeft, is het een periode in plaats van een\n            // specifiek jaartal\n            if (/^(\\d+(|\\s))-((|\\s)\\d+)$/.test(dates)) {\n\n                // split de twee jaartallen op het streepje, en cast beide jaartallen\n                // naar een integer, zodat deze later vergeleken kunnen worden met de jaar- \n                // tallen van de resultaten\n                // Array.map() loopt over alle waarden in de array heen en muteert de waarde (e)\n                // op die plek in de array. Bij deze loop worden whitespaces weggehaald en\n                // van strings dus integers gemaakt\n                // [\"100 \", \"200\"] wordt dan [100, 200]\n                return dates.split('-').map(e => parseInt(e.trim()));\n            } else if (!isNaN(dates)) {\n                // Wanneer er geen streepje in het jaartal, moet deze in ieder geval een \n                // valide getal zijn. isNan() checkt daar op (is Not A Number)\n                // en als het een getal is, cast hij hem naar een getal\n                return [parseInt(dates.trim())];\n            }\n\n            // geen jaartal, met of zonder streepje. Someone fucked it up\n            return [];\n        }\n\n        // jaartallen die je wilt checken\n        const yearToCheck = getDates(\"1762 - 1771\");\n\n        filteredData = data.filter(el => {\n            // zet jaartallen van het artikel in een array, zoals boven beschreven\n            const dates = getDates(el.uniqueJaartal.value);\n            // Wanneer er geen streepje is\n            if (dates.length === 1) {\n                // kijk of de te checken jaartal een streepje heeft\n                return yearToCheck.length === 1 ? \n                    // geen streepje, dan gewoon 1-op-1 checken\n                    yearToCheck[0] === dates[0] :\n                    // wel een streepje? Dan moet het begin van de te checken periode minder zijn dan \n                    // het jaartal van het artikel, en het einde van de te checken periode meer.\n                    // Dus -> \"1828 - 1856\" filteren -> 1828 is minder dan bijv. 1855 en 1856 is meer, dus 1855 \n                    // wordt meegenomen in de filtering\n                    yearToCheck[0] <= dates[0] && yearToCheck[1] >= dates[0];\n            } else if (dates.length === 2) {\n                // Check van een periode, aangezien er een streepje zit in het jaartal van het artikel\n                return yearToCheck.length === 1 ? \n                    // er wordt gecheckt op 1 jaartal, dan moet deze binnen de periode liggen van het artikel\n                    // dus meer dan de begin van die periode, en minder dan het einde van die periode \n                    yearToCheck[0] >= dates[0] && yearToCheck[0] <= dates[1] :\n                    // Er zit ee nstreepje in beide jaartallen, dan moeten de jaartallen van de te checken periode\n                    // binnen de jaartallen van de periode van het artikelliggen.\n                    yearToCheck[0] >= dates[0] && yearToCheck[1] <= dates[1];\n            }\n            // wanneer dates.length >= 3 of 0 is, is dit geen valide datum of periode, waardoor \n            // dit artikel sowieso niet meegenomen wordt in de filtering. \n            return false;\n        });\n\n        console.log(filteredData);\n        console.log(\"test2\", filteredData);\n    })\n\n</script>\n\n<style>\n\n\t.container {\n\t\tmax-width: 1100px;\n\t\tmargin: 0 auto;\n\t}\n\n\t.cards {\n\t\tdisplay: flex;\n\t\t-webkit-justify-content: center;\n\t\tjustify-content: center;\n\t\t-webkit-flex-wrap: wrap;\n\t\tflex-wrap: wrap;\n\t\tmargin-top: 15px;\n\t\tpadding: 1.5%;\n\t\t-webkit-box-sizing: border-box;\n\t\t-moz-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t}\n</style>\n\n<Extradata \n    title=\"Empress Go-Sakuramachi\"\n    years=\"1762–1771\"\n    name=\"Toshiko\"\n    image=\"images/Empress_Go-Sakuramachi.jpg\"\n    description=\"    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \n    \n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"/>\n\n<div class=\"container\">\n    <div class=\"cards\">\n        {#each filteredData as Showdata}\n                <Showdata {Showdata}/>\n            {:else}\n\n            Loading...\n        {/each}\n    </div>\n</div>",
    "<script>\n    import {onMount} from 'svelte';\n    import results from '../../data/getdata.js';\n    import Showdata from '../components/showdata.svelte';\n    import Extradata from '../components/extradata.svelte';\n\n    let data = [];\n    let filteredData = [];\n\n    onMount( async () => {\n\n        data = await results();\n\n        const getDates = (dates) => {\n\n            if (/^(\\d+(|\\s))-((|\\s)\\d+)$/.test(dates)) {\n\n                return dates.split('-').map(e => parseInt(e.trim()));\n            } else if (!isNaN(dates)) {\n\n                return [parseInt(dates.trim())];\n            }\n\n            return [];\n        }\n\n        // jaartallen die je wilt checken\n        const yearToCheck = getDates(\"1630 – 1670\");\n\n        filteredData = data.filter(el => {\n\n            const dates = getDates(el.uniqueJaartal.value);\n\n            if (dates.length === 1) {\n\n                return yearToCheck.length === 1 ? \n\n                    yearToCheck[0] === dates[0] :\n\n                    yearToCheck[0] <= dates[0] && yearToCheck[1] >= dates[0];\n            } else if (dates.length === 2) {\n\n                return yearToCheck.length === 1 ? \n\n                    yearToCheck[0] >= dates[0] && yearToCheck[0] <= dates[1] :\n\n                    yearToCheck[0] >= dates[0] && yearToCheck[1] <= dates[1];\n            }\n\n            return false;\n        });\n\n        console.log(filteredData);\n        console.log(\"test2\", filteredData);\n    })\n\n</script>\n\n<style>\n\n\t.container {\n\t\tmax-width: 1100px;\n\t\tmargin: 0 auto;\n\t}\n\n\t.cards {\n\t\tdisplay: flex;\n\t\t-webkit-justify-content: center;\n\t\tjustify-content: center;\n\t\t-webkit-flex-wrap: wrap;\n\t\tflex-wrap: wrap;\n\t\tmargin-top: 15px;\n\t\tpadding: 1.5%;\n\t\t-webkit-box-sizing: border-box;\n\t\t-moz-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t}\n</style>\n\n<Extradata \n    title=\"Emperor Go-Sai\"\n    years=\"1655–1663\"\n    name=\"Nagahito\"\n    image=\"images/Emperor_Go-Sai.jpg\"\n    description=\"    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \n    \n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"/>\n\n<div class=\"container\">\n    <div class=\"cards\">\n        {#each filteredData as Showdata}\n                <Showdata {Showdata}/>\n            {:else}\n\n            Loading...\n        {/each}\n    </div>\n</div>",
    "<script>\n    import {onMount} from 'svelte';\n    import results from '../../data/getdata.js';\n    import Showdata from '../components/showdata.svelte';\n    import Extradata from '../components/extradata.svelte';\n\n    let data = [];\n    let filteredData = [];\n\n    onMount( async () => {\n\n        data = await results();\n\n        const getDates = (dates) => {\n\n            if (/^(\\d+(|\\s))-((|\\s)\\d+)$/.test(dates)) {\n\n                return dates.split('-').map(e => parseInt(e.trim()));\n            } else if (!isNaN(dates)) {\n\n                return [parseInt(dates.trim())];\n            }\n\n            return [];\n        }\n\n        // jaartallen die je wilt checken\n        const yearToCheck = getDates(\"1636\");\n\n        filteredData = data.filter(el => {\n\n            const dates = getDates(el.uniqueJaartal.value);\n\n            if (dates.length === 1) {\n\n                return yearToCheck.length === 1 ? \n\n                    yearToCheck[0] === dates[0] :\n\n                    yearToCheck[0] <= dates[0] && yearToCheck[1] >= dates[0];\n            } else if (dates.length === 2) {\n\n                return yearToCheck.length === 1 ? \n \n                    yearToCheck[0] >= dates[0] && yearToCheck[0] <= dates[1] :\n\n                    yearToCheck[0] >= dates[0] && yearToCheck[1] <= dates[1];\n            }\n\n            return false;\n        });\n\n        console.log(filteredData);\n        console.log(\"test2\", filteredData);\n    })\n\n</script>\n\n<style>\n\n\t.container {\n\t\tmax-width: 1100px;\n\t\tmargin: 0 auto;\n\t}\n\n\t.cards {\n\t\tdisplay: flex;\n\t\t-webkit-justify-content: center;\n\t\tjustify-content: center;\n\t\t-webkit-flex-wrap: wrap;\n\t\tflex-wrap: wrap;\n\t\tmargin-top: 15px;\n\t\tpadding: 1.5%;\n\t\t-webkit-box-sizing: border-box;\n\t\t-moz-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t}\n</style>\n\n<Extradata \n    title=\"Empress Meishō\"\n    years=\"1629–1643\"\n    name=\"Okiko\"\n    image=\"images/Meisho_of_Japan.jpg\"\n    description=\"    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \n    \n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"/>\n\n<div class=\"container\">\n    <div class=\"cards\">\n        {#each filteredData as Showdata}\n                <Showdata {Showdata}/>\n            {:else}\n\n            Loading...\n        {/each}\n    </div>\n</div>",
    "<script>\n    import {onMount} from 'svelte';\n    import results from '../../data/getdata.js';\n    import Showdata from '../components/showdata.svelte';\n    import Extradata from '../components/extradata.svelte';\n\n    let data = [];\n    let filteredData = [];\n\n    onMount( async () => {\n\n        data = await results();\n\n        const getDates = (dates) => {\n\n            if (/^(\\d+(|\\s))-((|\\s)\\d+)$/.test(dates)) {\n\n\n                return dates.split('-').map(e => parseInt(e.trim()));\n            } else if (!isNaN(dates)) {\n                return [parseInt(dates.trim())];\n            }\n\n            // geen jaartal, met of zonder streepje. Someone fucked it up\n            return [];\n        }\n\n        // jaartallen die je wilt checken\n        const yearToCheck = getDates(\"1655 - 1690\");\n\n        filteredData = data.filter(el => {\n\n            const dates = getDates(el.uniqueJaartal.value);\n\n            if (dates.length === 1) {\n                return yearToCheck.length === 1 ? \n\n                    yearToCheck[0] === dates[0] :\n\n                    yearToCheck[0] <= dates[0] && yearToCheck[1] >= dates[0];\n            } else if (dates.length === 2) {\n\n                return yearToCheck.length === 1 ? \n\n                    yearToCheck[0] >= dates[0] && yearToCheck[0] <= dates[1] :\n\n                    yearToCheck[0] >= dates[0] && yearToCheck[1] <= dates[1];\n            }\n\n            return false;\n        });\n\n        console.log(filteredData);\n        console.log(\"test2\", filteredData);\n    })\n\n</script>\n\n<style>\n\n\t.container {\n\t\tmax-width: 1100px;\n\t\tmargin: 0 auto;\n\t}\n\n\t.cards {\n\t\tdisplay: flex;\n\t\t-webkit-justify-content: center;\n\t\tjustify-content: center;\n\t\t-webkit-flex-wrap: wrap;\n\t\tflex-wrap: wrap;\n\t\tmargin-top: 15px;\n\t\tpadding: 1.5%;\n\t\t-webkit-box-sizing: border-box;\n\t\t-moz-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t}\n</style>\n\n<Extradata \n    title=\"Emperor Reigen\"\n    years=\"1663–1687\"\n    name=\"Satohito\"\n    image=\"images/Emperor_Reigen.jpg\"\n    description=\"    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \n    \n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"/>\n\n<div class=\"container\">\n    <div class=\"cards\">\n        {#each filteredData as Showdata}\n                <Showdata {Showdata}/>\n            {:else}\n\n            Loading...\n        {/each}\n    </div>\n</div>",
    "<script>\n    import {onMount} from 'svelte';\n    import results from '../../data/getdata.js';\n    import Showdata from '../components/showdata.svelte';\n    import Extradata from '../components/extradata.svelte';\n\n    let data = [];\n    let filteredData = [];\n\n    onMount( async () => {\n\n        data = await results();\n\n        const getDates = (dates) => {\n\n            if (/^(\\d+(|\\s))-((|\\s)\\d+)$/.test(dates)) {\n\n                return dates.split('-').map(e => parseInt(e.trim()));\n            } else if (!isNaN(dates)) {\n\n                return [parseInt(dates.trim())];\n            }\n\n            return [];\n        }\n\n        // jaartallen die je wilt checken\n        const yearToCheck = getDates(\"1700 - 1709\");\n\n        filteredData = data.filter(el => {\n\n            const dates = getDates(el.uniqueJaartal.value);\n\n            if (dates.length === 1) {\n\n                return yearToCheck.length === 1 ? \n\n                    yearToCheck[0] === dates[0] :\n\n                    yearToCheck[0] <= dates[0] && yearToCheck[1] >= dates[0];\n            } else if (dates.length === 2) {\n\n                return yearToCheck.length === 1 ? \n\n                    yearToCheck[0] >= dates[0] && yearToCheck[0] <= dates[1] :\n\n                    yearToCheck[0] >= dates[0] && yearToCheck[1] <= dates[1];\n            }\n\n            return false;\n        });\n\n        console.log(filteredData);\n        console.log(\"test2\", filteredData);\n    })\n\n</script>\n\n<style>\n\n\t.container {\n\t\tmax-width: 1100px;\n\t\tmargin: 0 auto;\n\t}\n\n\t.cards {\n\t\tdisplay: flex;\n\t\t-webkit-justify-content: center;\n\t\tjustify-content: center;\n\t\t-webkit-flex-wrap: wrap;\n\t\tflex-wrap: wrap;\n\t\tmargin-top: 15px;\n\t\tpadding: 1.5%;\n\t\t-webkit-box-sizing: border-box;\n\t\t-moz-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t}\n</style>\n\n<Extradata \n    title=\"Emperor Higashiyama\"\n    years=\"1687–1709\"\n    name=\"Asahito/Tomohito\"\n    image=\"images/800px-Emperor_Higashiyama.jpg\"\n    description=\"    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \n    \n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"/>\n\n<div class=\"container\">\n    <div class=\"cards\">\n        {#each filteredData as Showdata}\n                <Showdata {Showdata}/>\n            {:else}\n\n            Loading...\n        {/each}\n    </div>\n</div>",
    "<script>\n    import {onMount} from 'svelte';\n    import results from '../../data/getdata.js';\n    import Showdata from '../components/showdata.svelte';\n    import Extradata from '../components/extradata.svelte';\n\n    let data = [];\n    let filteredData = [];\n\n    onMount( async () => {\n\n        data = await results();\n\n        const getDates = (dates) => {\n\n            if (/^(\\d+(|\\s))-((|\\s)\\d+)$/.test(dates)) {\n\n                return dates.split('-').map(e => parseInt(e.trim()));\n            } else if (!isNaN(dates)) {\n\n                return [parseInt(dates.trim())];\n            }\n\n            return [];\n        }\n\n        // jaartallen die je wilt checken\n        const yearToCheck = getDates(\"1709 - 1735\");\n\n        filteredData = data.filter(el => {\n\n            const dates = getDates(el.uniqueJaartal.value);\n\n            if (dates.length === 1) {\n\n                return yearToCheck.length === 1 ? \n\n                    yearToCheck[0] === dates[0] :\n\n                    yearToCheck[0] <= dates[0] && yearToCheck[1] >= dates[0];\n            } else if (dates.length === 2) {\n\n                return yearToCheck.length === 1 ? \n\n                    yearToCheck[0] >= dates[0] && yearToCheck[0] <= dates[1] :\n\n                    yearToCheck[0] >= dates[0] && yearToCheck[1] <= dates[1];\n            }\n\n            return false;\n        });\n\n        console.log(filteredData);\n        console.log(\"test2\", filteredData);\n    })\n\n</script>\n\n<style>\n\n\t.container {\n\t\tmax-width: 1100px;\n\t\tmargin: 0 auto;\n\t}\n\n\t.cards {\n\t\tdisplay: flex;\n\t\t-webkit-justify-content: center;\n\t\tjustify-content: center;\n\t\t-webkit-flex-wrap: wrap;\n\t\tflex-wrap: wrap;\n\t\tmargin-top: 15px;\n\t\tpadding: 1.5%;\n\t\t-webkit-box-sizing: border-box;\n\t\t-moz-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t}\n</style>\n\n<Extradata \n    title=\"Emperor Nakamikado\"\n    years=\"1709–1735\"\n    name=\"Yasuhito/Yoshihito\"\n    image=\"images/Emperor_Nakamikado.jpg\"\n    description=\"    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \n    \n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"/>\n\n<div class=\"container\">\n    <div class=\"cards\">\n        {#each filteredData as Showdata}\n                <Showdata {Showdata}/>\n            {:else}\n\n            Loading...\n        {/each}\n    </div>\n</div>",
    "<script>\n    import {onMount} from 'svelte';\n    import results from '../../data/getdata.js';\n    import Showdata from '../components/showdata.svelte';\n    import Extradata from '../components/extradata.svelte';\n\n    let data = [];\n    let filteredData = [];\n\n    onMount( async () => {\n\n        data = await results();\n\n        const getDates = (dates) => {\n\n            if (/^(\\d+(|\\s))-((|\\s)\\d+)$/.test(dates)) {\n\n                return dates.split('-').map(e => parseInt(e.trim()));\n            } else if (!isNaN(dates)) {\n\n                return [parseInt(dates.trim())];\n            }\n\n            return [];\n        }\n\n        // jaartallen die je wilt checken\n        const yearToCheck = getDates(\"1730 - 1749\");\n\n        filteredData = data.filter(el => {\n\n            const dates = getDates(el.uniqueJaartal.value);\n\n            if (dates.length === 1) {\n\n                return yearToCheck.length === 1 ? \n\n                    yearToCheck[0] === dates[0] :\n\n                    yearToCheck[0] <= dates[0] && yearToCheck[1] >= dates[0];\n            } else if (dates.length === 2) {\n\n                return yearToCheck.length === 1 ? \n \n                    yearToCheck[0] >= dates[0] && yearToCheck[0] <= dates[1] :\n\n                    yearToCheck[0] >= dates[0] && yearToCheck[1] <= dates[1];\n            }\n\n            return false;\n        });\n\n        console.log(filteredData);\n        console.log(\"test2\", filteredData);\n    })\n\n</script>\n\n<style>\n\n\t.container {\n\t\tmax-width: 1100px;\n\t\tmargin: 0 auto;\n\t}\n\n\t.cards {\n\t\tdisplay: flex;\n\t\t-webkit-justify-content: center;\n\t\tjustify-content: center;\n\t\t-webkit-flex-wrap: wrap;\n\t\tflex-wrap: wrap;\n\t\tmargin-top: 15px;\n\t\tpadding: 1.5%;\n\t\t-webkit-box-sizing: border-box;\n\t\t-moz-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t}\n</style>\n\n<Extradata \n    title=\"Emperor Sakuramachi\"\n    years=\"1735–1747\"\n    name=\"Teruhito\"\n    image=\"images/Emperor_Sakuramachi.jpg\"\n    description=\"    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \n    \n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"/>\n\n<div class=\"container\">\n    <div class=\"cards\">\n        {#each filteredData as Showdata}\n                <Showdata {Showdata}/>\n            {:else}\n\n            Loading...\n        {/each}\n    </div>\n</div>",
    "<script>\n    import {onMount} from 'svelte';\n    import results from '../../data/getdata.js';\n    import Showdata from '../components/showdata.svelte';\n    import Extradata from '../components/extradata.svelte';\n\n    let data = [];\n    let filteredData = [];\n\n    onMount( async () => {\n\n        data = await results();\n\n        const getDates = (dates) => {\n\n            if (/^(\\d+(|\\s))-((|\\s)\\d+)$/.test(dates)) {\n\n                return dates.split('-').map(e => parseInt(e.trim()));\n            } else if (!isNaN(dates)) {\n\n                return [parseInt(dates.trim())];\n            }\n\n            return [];\n        }\n\n        // jaartallen die je wilt checken\n        const yearToCheck = getDates(\"1747 - 1762\");\n\n        filteredData = data.filter(el => {\n\n            const dates = getDates(el.uniqueJaartal.value);\n\n            if (dates.length === 1) {\n\n                return yearToCheck.length === 1 ? \n\n                    yearToCheck[0] === dates[0] :\n\n                    yearToCheck[0] <= dates[0] && yearToCheck[1] >= dates[0];\n            } else if (dates.length === 2) {\n\n                return yearToCheck.length === 1 ? \n \n                    yearToCheck[0] >= dates[0] && yearToCheck[0] <= dates[1] :\n\n                    yearToCheck[0] >= dates[0] && yearToCheck[1] <= dates[1];\n            }\n\n            return false;\n        });\n\n        console.log(filteredData);\n        console.log(\"test2\", filteredData);\n    })\n\n</script>\n\n<style>\n\n\t.container {\n\t\tmax-width: 1100px;\n\t\tmargin: 0 auto;\n\t}\n\n\t.cards {\n\t\tdisplay: flex;\n\t\t-webkit-justify-content: center;\n\t\tjustify-content: center;\n\t\t-webkit-flex-wrap: wrap;\n\t\tflex-wrap: wrap;\n\t\tmargin-top: 15px;\n\t\tpadding: 1.5%;\n\t\t-webkit-box-sizing: border-box;\n\t\t-moz-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t}\n</style>\n\n<Extradata \n    title=\"Emperor Momozono\"\n    years=\"1747–1762\"\n    name=\"Toohito\"\n    image=\"images/1280px-Emperor_Momozono.jpg\"\n    description=\"    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \n    \n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"/>\n\n<div class=\"container\">\n    <div class=\"cards\">\n        {#each filteredData as Showdata}\n                <Showdata {Showdata}/>\n            {:else}\n\n            Loading...\n        {/each}\n    </div>\n</div>",
    "<script>\n    import {onMount} from 'svelte';\n    import results from '../../data/getdata.js';\n    import Showdata from '../components/showdata.svelte';\n    import Extradata from '../components/extradata.svelte';\n\n    let data = [];\n    let filteredData = [];\n\n    onMount( async () => {\n\n        data = await results();\n\n        const getDates = (dates) => {\n\n            if (/^(\\d+(|\\s))-((|\\s)\\d+)$/.test(dates)) {\n\n                return dates.split('-').map(e => parseInt(e.trim()));\n            } else if (!isNaN(dates)) {\n\n                return [parseInt(dates.trim())];\n            }\n\n            return [];\n        }\n\n        // jaartallen die je wilt checken\n        const yearToCheck = getDates(\"1780 - 1800\");\n\n        filteredData = data.filter(el => {\n\n            const dates = getDates(el.uniqueJaartal.value);\n\n            if (dates.length === 1) {\n\n                return yearToCheck.length === 1 ? \n\n                    yearToCheck[0] === dates[0] :\n\n                    yearToCheck[0] <= dates[0] && yearToCheck[1] >= dates[0];\n            } else if (dates.length === 2) {\n\n                return yearToCheck.length === 1 ? \n \n                    yearToCheck[0] >= dates[0] && yearToCheck[0] <= dates[1] :\n\n                    yearToCheck[0] >= dates[0] && yearToCheck[1] <= dates[1];\n            }\n\n            return false;\n        });\n\n        console.log(filteredData);\n        console.log(\"test2\", filteredData);\n    })\n\n</script>\n\n<style>\n\n\t.container {\n\t\tmax-width: 1100px;\n\t\tmargin: 0 auto;\n\t}\n\n\t.cards {\n\t\tdisplay: flex;\n\t\t-webkit-justify-content: center;\n\t\tjustify-content: center;\n\t\t-webkit-flex-wrap: wrap;\n\t\tflex-wrap: wrap;\n\t\tmargin-top: 15px;\n\t\tpadding: 1.5%;\n\t\t-webkit-box-sizing: border-box;\n\t\t-moz-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t}\n</style>\n\n<Extradata \n    title=\"Emperor Kōkaku\"\n    years=\"1780–1817\"\n    name=\"Morohito\"\n    image=\"images/Emperor_Kōkaku.jpg\"\n    description=\"    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \n    \n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"/>\n\n<div class=\"container\">\n    <div class=\"cards\">\n        {#each filteredData as Showdata}\n                <Showdata {Showdata}/>\n            {:else}\n\n            Loading...\n        {/each}\n    </div>\n</div>",
    "<script>\n    import {onMount} from 'svelte';\n    import results from '../../data/getdata.js';\n    import Showdata from '../components/showdata.svelte';\n    import Extradata from '../components/extradata.svelte';\n\n    let data = [];\n    let filteredData = [];\n\n    onMount( async () => {\n\n        data = await results();\n\n        const getDates = (dates) => {\n\n            if (/^(\\d+(|\\s))-((|\\s)\\d+)$/.test(dates)) {\n\n                return dates.split('-').map(e => parseInt(e.trim()));\n            } else if (!isNaN(dates)) {\n\n                return [parseInt(dates.trim())];\n            }\n\n            return [];\n        }\n\n        // jaartallen die je wilt checken\n        const yearToCheck = getDates(\"1817 - 1846\");\n\n        filteredData = data.filter(el => {\n\n            const dates = getDates(el.uniqueJaartal.value);\n\n            if (dates.length === 1) {\n\n                return yearToCheck.length === 1 ? \n\n                    yearToCheck[0] === dates[0] :\n\n                    yearToCheck[0] <= dates[0] && yearToCheck[1] >= dates[0];\n            } else if (dates.length === 2) {\n\n                return yearToCheck.length === 1 ? \n\n                    yearToCheck[0] >= dates[0] && yearToCheck[0] <= dates[1] :\n\n                    yearToCheck[0] >= dates[0] && yearToCheck[1] <= dates[1];\n            }\n\n            return false;\n        });\n\n        console.log(filteredData);\n        console.log(\"test2\", filteredData);\n    })\n\n</script>\n\n<style>\n\n\t.container {\n\t\tmax-width: 1100px;\n\t\tmargin: 0 auto;\n\t}\n\n\t.cards {\n\t\tdisplay: flex;\n\t\t-webkit-justify-content: center;\n\t\tjustify-content: center;\n\t\t-webkit-flex-wrap: wrap;\n\t\tflex-wrap: wrap;\n\t\tmargin-top: 15px;\n\t\tpadding: 1.5%;\n\t\t-webkit-box-sizing: border-box;\n\t\t-moz-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t}\n</style>\n\n<Extradata \n    title=\"Emperor Ninkō\"\n    years=\"1817–1846\"\n    name=\"Ayahito\"\n    image=\"images/Emperor_Ninkō.jpg\"\n    description=\"    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \n    \n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"/>\n\n<div class=\"container\">\n    <div class=\"cards\">\n        {#each filteredData as Showdata}\n                <Showdata {Showdata}/>\n            {:else}\n\n            Loading...\n        {/each}\n    </div>\n</div>",
    "<script>\n    import {onMount} from 'svelte';\n    import results from '../../data/getdata.js';\n    import Showdata from '../components/showdata.svelte';\n    import Extradata from '../components/extradata.svelte';\n\n    let data = [];\n    let filteredData = [];\n\n    onMount( async () => {\n\n        data = await results();\n\n        const getDates = (dates) => {\n            // Check of de/het jaartal(len) die je wilt checken een streepje heeft.\n            // Wanneer het een streepje heeft, is het een periode in plaats van een\n            // specifiek jaartal\n            if (/^(\\d+(|\\s))-((|\\s)\\d+)$/.test(dates)) {\n\n                // split de twee jaartallen op het streepje, en cast beide jaartallen\n                // naar een integer, zodat deze later vergeleken kunnen worden met de jaar- \n                // tallen van de resultaten\n                // Array.map() loopt over alle waarden in de array heen en muteert de waarde (e)\n                // op die plek in de array. Bij deze loop worden whitespaces weggehaald en\n                // van strings dus integers gemaakt\n                // [\"100 \", \"200\"] wordt dan [100, 200]\n                return dates.split('-').map(e => parseInt(e.trim()));\n            } else if (!isNaN(dates)) {\n                // Wanneer er geen streepje in het jaartal, moet deze in ieder geval een \n                // valide getal zijn. isNan() checkt daar op (is Not A Number)\n                // en als het een getal is, cast hij hem naar een getal\n                return [parseInt(dates.trim())];\n            }\n\n            // geen jaartal, met of zonder streepje. Someone fucked it up\n            return [];\n        }\n\n        // jaartallen die je wilt checken\n        const yearToCheck = getDates(\"1846 - 1867\");\n\n        filteredData = data.filter(el => {\n            // zet jaartallen van het artikel in een array, zoals boven beschreven\n            const dates = getDates(el.uniqueJaartal.value);\n            // Wanneer er geen streepje is\n            if (dates.length === 1) {\n                // kijk of de te checken jaartal een streepje heeft\n                return yearToCheck.length === 1 ? \n                    // geen streepje, dan gewoon 1-op-1 checken\n                    yearToCheck[0] === dates[0] :\n                    // wel een streepje? Dan moet het begin van de te checken periode minder zijn dan \n                    // het jaartal van het artikel, en het einde van de te checken periode meer.\n                    // Dus -> \"1828 - 1856\" filteren -> 1828 is minder dan bijv. 1855 en 1856 is meer, dus 1855 \n                    // wordt meegenomen in de filtering\n                    yearToCheck[0] <= dates[0] && yearToCheck[1] >= dates[0];\n            } else if (dates.length === 2) {\n                // Check van een periode, aangezien er een streepje zit in het jaartal van het artikel\n                return yearToCheck.length === 1 ? \n                    // er wordt gecheckt op 1 jaartal, dan moet deze binnen de periode liggen van het artikel\n                    // dus meer dan de begin van die periode, en minder dan het einde van die periode \n                    yearToCheck[0] >= dates[0] && yearToCheck[0] <= dates[1] :\n                    // Er zit ee nstreepje in beide jaartallen, dan moeten de jaartallen van de te checken periode\n                    // binnen de jaartallen van de periode van het artikelliggen.\n                    yearToCheck[0] >= dates[0] && yearToCheck[1] <= dates[1];\n            }\n            // wanneer dates.length >= 3 of 0 is, is dit geen valide datum of periode, waardoor \n            // dit artikel sowieso niet meegenomen wordt in de filtering. \n            return false;\n        });\n\n        console.log(filteredData);\n        console.log(\"test2\", filteredData);\n    })\n\n</script>\n\n<style>\n\n\t.container {\n\t\tmax-width: 1100px;\n\t\tmargin: 0 auto;\n\t}\n\n\t.cards {\n\t\tdisplay: flex;\n\t\t-webkit-justify-content: center;\n\t\tjustify-content: center;\n\t\t-webkit-flex-wrap: wrap;\n\t\tflex-wrap: wrap;\n\t\tmargin-top: 15px;\n\t\tpadding: 1.5%;\n\t\t-webkit-box-sizing: border-box;\n\t\t-moz-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t}\n</style>\n\n<Extradata \n    title=\"Emperor Kōmei\"\n    years=\"1846–1867\"\n    name=\"Osahito\"\n    image=\"images/800px-The_Emperor_Komei.jpg\"\n    description=\"    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \n    \n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo \n    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse \n    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non \n    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"/>\n\n<div class=\"container\">\n    <div class=\"cards\">\n        {#each filteredData as Showdata}\n                <Showdata {Showdata}/>\n            {:else}\n\n            Loading...\n        {/each}\n    </div>\n</div>"
  ],
  "names": [],
  "mappings": "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"
}